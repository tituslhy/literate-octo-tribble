{"user_id":"guestuser@gmail.com","name":"Stock Workflow with tools","type":"autonomous","summary_method":"llm","sample_tasks":[],"version":"0.0.1","description":"Uses tools to get stock ticker results and analysis","agents":[{"agent":{"version":"0.0.1","config":{"name":"user_proxy","human_input_mode":"NEVER","max_consecutive_auto_reply":25,"system_message":"You are a helpful assistant","is_termination_msg":null,"code_execution_config":"local","default_auto_reply":"TERMINATE","description":"User Proxy Agent Configuration","llm_config":false,"admin_name":"Admin","messages":[],"max_round":100,"speaker_selection_method":"auto","allow_repeat_speaker":true},"user_id":"guestuser@gmail.com","type":"userproxy","task_instruction":null,"skills":[],"models":[],"agents":[]},"link":{"agent_id":1,"agent_type":"sender","workflow_id":6,"sequence_id":0}},{"agent":{"version":"0.0.1","config":{"name":"StockAnalyst","description":"Gets stock price and information for a ticker of interest","llm_config":{"config_list":[{"version":"0.0.1","base_url":null,"api_version":null,"model":"gpt-4o-mini","api_type":"open_ai"}],"temperature":0.1,"timeout":600,"cache_seed":null,"max_tokens":4000},"human_input_mode":"NEVER","max_consecutive_auto_reply":5,"code_execution_config":"none","system_message":"You are a helpful stock analyst. Use tools to get stock information and analyse the results for the user."},"user_id":"guestuser@gmail.com","type":"assistant","task_instruction":null,"skills":[{"user_id":"guestuser@gmail.com","version":"0.0.1","name":"get_stock_data","content":"import yfinance as yf\nimport pandas as pd\nfrom datetime import datetime, timedelta\nfrom typing import Optional, Annotated\n\ndef get_stock_data(\n    ticker: Annotated[str, \"Ticker of interest\"],\n    end_date: Optional[datetime] = datetime.now(),\n    start_date: Optional[datetime] = None\n):\n    \"\"\"\n    Retrieves historical stock price data\n    for a ticker for a date range,\n    calculates price changes,\n    identifies highs and lows, and computes\n    the average trading volume\n    \"\"\"\n    \n    if start_date is None:\n        start_date = end_date - timedelta(days=365)\n\n    # Fetch historical stock data for the last 12 months\n    data = yf.download(ticker, start=start_date, end=end_date)\n\n    # Calculate percentage change over the 12 months\n    data['Percentage Change'] = ((data['Close'] - data['Close'].iloc[0]) / data['Close'].iloc[0]) * 100\n\n    # Identify the highest and lowest stock prices during this period\n    highest_price = data['Close'].max()\n    lowest_price = data['Close'].min()\n\n    # Calculate average trading volume\n    average_volume = data['Volume'].mean()\n\n    # Prepare results\n    result = {\n        'start_price': data['Close'].iloc[0],\n        'end_price': data['Close'].iloc[-1],\n        'percentage_change': data['Percentage Change'].iloc[-1],\n        'highest_price': highest_price,\n        'lowest_price': lowest_price,\n        'average_volume': average_volume\n    }\n\n    return result","description":"Retrieves historical stock price data\nfor a ticker for a date range, calculates price changes, identifies highs and lows, and computes the average trading volume","libraries":[]}],"models":[{"version":"0.0.1","base_url":null,"api_version":null,"description":"OpenAI GPT-4o-mini model","user_id":"guestuser@gmail.com","model":"gpt-4o-mini","api_type":"open_ai"}],"agents":[]},"link":{"agent_id":13,"agent_type":"receiver","workflow_id":6,"sequence_id":0}}]}